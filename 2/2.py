# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# ----------------------------------------------------
# 
# This like a billion times faster than the niave implementation

fibs = {0: 1, 1: 1, 2: 2}
def fib(n):
	global fibs
	if n in fibs:
		return fibs[n]
	else:
		fibs[n] = fib(n - 1) + fib(n - 2)
		return fibs[n]

n = 0
sum = 0
while fib(n) < 4000000:
	sum += fib(n) if fib(n) % 2 == 0 else 0
	n += 1
print sum